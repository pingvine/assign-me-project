name: Python tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "*" ]

jobs:
  requirements:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/checkout@v2

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            requirements.txt
          key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Export requirements
        run: poetry export --dev -f requirements.txt > requirements.txt

      - name: Upload requirements.txt
        uses: actions/upload-artifact@v2
        with:
          name: python-requirements
          path: requirements.txt

  pytest:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: assignme
          POSTGRES_DB: assignme
          POSTGRES_PASSWORD: m364b374
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/checkout@v2

      - name: Download requirements.txt
        uses: actions/download-artifact@v2
        with:
          name: python-requirements

      - name: Cache pip
        uses: actions/cache@v2
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt --no-warn-script-location
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
            ${{ runner.os }}-
      
      - name: Run tests with pytest
        env:
          PGUSER: assignme
          DATABASE_URL: postgresql://assignme:m364b374@localhost/assignme
          PYTHONPATH: /home/runner/work/assignme/assignme
          DJANGO_SETTINGS_MODULE: mb.conf.settings.testing
          SECRET_KEY: such secret very test
        run: python manage.py test